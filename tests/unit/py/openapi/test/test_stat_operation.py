# coding: utf-8

"""
    Simple API

    A simple API to demonstrate OpenAPI to C++ stub generation.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.stat_operation import StatOperation

class TestStatOperation(unittest.TestCase):
    """StatOperation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StatOperation:
        """Test StatOperation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StatOperation`
        """
        model = StatOperation()
        if include_optional:
            return StatOperation(
                item_key = openapi_client.models.item_key.ItemKey(
                    tag_uuid = '', 
                    elem_uuid = '', 
                    owner_uuid = '', 
                    kind = 'ucat', 
                    seq_no = 56, ),
                signature = openapi_client.models.signature.Signature(
                    signed_hash = '', 
                    s_value = '', 
                    r_value = '', 
                    op = '', ),
                values = [
                    openapi_client.models.stat_element.StatElement(
                        item_id = openapi_client.models.item_id.ItemId(
                            uuid = '', 
                            kind = 'ucat', 
                            seq_no = 56, ), 
                        peer_id = openapi_client.models.item_id.ItemId(
                            uuid = '', 
                            kind = 'ucat', 
                            seq_no = 56, ), 
                        counter = openapi_client.models.counter.Counter(
                            name = '', 
                            value = 56, ), )
                    ]
            )
        else:
            return StatOperation(
                item_key = openapi_client.models.item_key.ItemKey(
                    tag_uuid = '', 
                    elem_uuid = '', 
                    owner_uuid = '', 
                    kind = 'ucat', 
                    seq_no = 56, ),
                signature = openapi_client.models.signature.Signature(
                    signed_hash = '', 
                    s_value = '', 
                    r_value = '', 
                    op = '', ),
                values = [
                    openapi_client.models.stat_element.StatElement(
                        item_id = openapi_client.models.item_id.ItemId(
                            uuid = '', 
                            kind = 'ucat', 
                            seq_no = 56, ), 
                        peer_id = openapi_client.models.item_id.ItemId(
                            uuid = '', 
                            kind = 'ucat', 
                            seq_no = 56, ), 
                        counter = openapi_client.models.counter.Counter(
                            name = '', 
                            value = 56, ), )
                    ],
        )
        """

    def testStatOperation(self):
        """Test StatOperation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
