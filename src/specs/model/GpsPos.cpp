/**
* Simple API
* A simple API to demonstrate OpenAPI to C++ stub generation.
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "GpsPos.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

GpsPos::GpsPos()
{
    m_Lng = 0.0;
    m_Lat = 0.0;
    
}

void GpsPos::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool GpsPos::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool GpsPos::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "GpsPos" : pathPrefix;

        
    if (!m_ItemId.validate(msg, _pathPrefix + ".itemId")) {
        msg << _pathPrefix << ": ItemId is invalid;";
        success = false;
    }        
    return success;
}

bool GpsPos::operator==(const GpsPos& rhs) const
{
    return
    
    
    (getItemId() == rhs.getItemId())
     &&
    
    (getLng() == rhs.getLng())
     &&
    
    (getLat() == rhs.getLat())
    
    
    ;
}

bool GpsPos::operator!=(const GpsPos& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const GpsPos& o)
{
    j = nlohmann::json::object();
    j["itemId"] = o.m_ItemId;
    j["lng"] = o.m_Lng;
    j["lat"] = o.m_Lat;
    
}

void from_json(const nlohmann::json& j, GpsPos& o)
{
    j.at("itemId").get_to(o.m_ItemId);
    j.at("lng").get_to(o.m_Lng);
    j.at("lat").get_to(o.m_Lat);
    
}

org::openapitools::server::model::ItemId GpsPos::getItemId() const
{
    return m_ItemId;
}
void GpsPos::setItemId(org::openapitools::server::model::ItemId const& value)
{
    m_ItemId = value;
}
double GpsPos::getLng() const
{
    return m_Lng;
}
void GpsPos::setLng(double const value)
{
    m_Lng = value;
}
double GpsPos::getLat() const
{
    return m_Lat;
}
void GpsPos::setLat(double const value)
{
    m_Lat = value;
}


} // namespace org::openapitools::server::model

